{"ast":null,"code":"export const BubbleSort = (array, colorKeys, steps, colorSteps) => {\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - 1 - i; j++) {\n      if (array[j] > array[j + 1]) {\n        let temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n\n      colorKeys[j] = 1;\n      colorKeys[j + 1] = 1;\n      steps.push([...array]);\n      colorSteps.push([...colorKeys]);\n      colorKeys[j] = 0;\n      colorKeys[j + 1] = 0;\n    }\n\n    colorKeys[array.length - 1 - i] = 2;\n    steps.push([...array]);\n    colorSteps.push([...colorKeys]);\n  }\n\n  steps.push([...array]);\n  colorSteps.push([...colorKeys]);\n};\n_c = BubbleSort;\nexport const SelectionSort = (array, colorKeys, steps, colorSteps) => {\n  for (let i = 0; i < array.length; i++) {\n    let min = i;\n\n    for (let j = i + 1; j < array.length; j++) {\n      if (array[j] < array[min]) {\n        min = j;\n      }\n\n      colorKeys[j] = 1;\n      colorKeys[min] = 1;\n      colorKeys[i] = 1;\n      colorSteps.push([...colorKeys]);\n      steps.push([...array]);\n      colorKeys[j] = 0;\n      colorKeys[min] = 0;\n    }\n\n    let swap = array[i];\n    array[i] = array[min];\n    array[min] = swap;\n    colorKeys[min] = 0;\n    colorKeys[i] = 2;\n    colorSteps.push([...colorKeys]);\n    steps.push([...array]);\n  }\n\n  colorSteps.push([...colorKeys]);\n  steps.push([...array]);\n};\n_c2 = SelectionSort;\nexport const MergeSort = array => {\n  if (array.length < 2) return;\n  let middle = Math.floor(array.length / 2);\n  let left = array.slice(0, middle);\n  let right = array.slice(middle, array.length);\n  MergeSort(left);\n  MergeSort(right); //merge\n\n  let i = 0,\n      j = 0,\n      k = 0;\n\n  while (i < left.length && j < right.length) {\n    if (left[i] < right[j]) {\n      array[k] = left[i];\n      i++;\n      k++;\n    } else {\n      array[k] = right[j];\n      j++;\n      k++;\n    }\n  }\n\n  while (i < left.length) {\n    array[k] = left[i];\n    i++;\n    k++;\n  }\n\n  while (j < left.length) {\n    array[k] = right[j];\n    j++;\n    k++;\n  }\n};\n_c3 = MergeSort;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BubbleSort\");\n$RefreshReg$(_c2, \"SelectionSort\");\n$RefreshReg$(_c3, \"MergeSort\");","map":{"version":3,"names":["BubbleSort","array","colorKeys","steps","colorSteps","i","length","j","temp","push","SelectionSort","min","swap","MergeSort","middle","Math","floor","left","slice","right","k"],"sources":["/Users/jackie/git/sorting-visualizer/src/components/SortingAlgorithm.js"],"sourcesContent":["export const BubbleSort = (array, colorKeys, steps, colorSteps) =>{\n\n    for(let i=0; i<array.length; i++){\n        for(let j=0; j<array.length-1-i; j++){\n            if(array[j] > array[j+1]){\n                let temp = array[j];\n                array[j] = array[j+1];\n                array[j+1] = temp;\n            }\n            colorKeys[j] = 1;\n            colorKeys[j+1] = 1;\n\n            steps.push([...array]);\n            colorSteps.push([...colorKeys]);\n\n            colorKeys[j] = 0;\n            colorKeys[j+1] = 0;\n        }\n        \n        colorKeys[array.length-1-i] = 2;\n        steps.push([...array]);\n        colorSteps.push([...colorKeys]);\n    }\n    steps.push([...array]);\n    colorSteps.push([...colorKeys]);\n\n}\n\n\nexport const SelectionSort = (array, colorKeys, steps, colorSteps) => {\n\n    for(let i=0; i<array.length; i++){\n        let min = i;\n        for(let j=i+1; j<array.length; j++){\n            if(array[j] < array[min]){\n                min = j;      \n            }\n            colorKeys[j] = 1;\n            colorKeys[min] = 1;\n            colorKeys[i] = 1;\n            \n            colorSteps.push([...colorKeys]);\n            steps.push([...array]);\n\n            colorKeys[j] = 0;\n            colorKeys[min] = 0;\n\n        }\n\n        let swap = array[i];\n        array[i] = array[min];\n        array[min] = swap;\n\n        colorKeys[min] = 0;\n        colorKeys[i] = 2;\n\n        colorSteps.push([...colorKeys]);\n        steps.push([...array]);\n\n    }\n    colorSteps.push([...colorKeys]);\n    steps.push([...array]);\n}\n\n\nexport const MergeSort = (array) => {\n    if(array.length < 2) return;\n    \n    let middle = Math.floor(array.length / 2);\n    let left = array.slice(0, middle);\n    let right = array.slice(middle, array.length);\n\n    MergeSort(left);\n    MergeSort(right);\n\n    //merge\n\n    let i=0, j=0, k=0;\n\n    while(i < left.length && j < right.length){\n        if(left[i] < right[j]){\n            array[k] = left[i];\n            i++;\n            k++;\n        }\n        else{\n            array[k] = right[j];\n            j++;\n            k++;\n        }\n    }\n\n    while(i < left.length) {\n        array[k] = left[i];\n        i++;\n        k++;\n    }\n\n    while(j < left.length) {\n        array[k] = right[j];\n        j++;\n        k++;\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}